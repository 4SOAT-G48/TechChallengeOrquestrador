name: pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SERVER_PORT: ${{ vars.SERVER_PORT }}
  SPRING_PROFILE: ${{ vars.SPRING_PROFILE }}
  LOG_LEVEL: ${{ vars.LOG_LEVEL }}
  LOG_PATH: ${{ vars.LOG_PATH }}
  MONGO_USER: ${{ secrets.MONGO_USER }}
  MONGO_PASS: ${{ secrets.MONGO_PASS }}
  MONGO_HOST: ${{ secrets.MONGO_HOST }}
  MONGO_PORT: ${{ secrets.MONGO_PORT }}
  MONGO_DB: ${{ secrets.MONGO_DB }}
  RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
  RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
  RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
  RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
  EXCHANGE_ORQUESTRADOR: ${{ vars.EXCHANGE_ORQUESTRADOR }}
  ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO }}
  QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO: ${{ vars.QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO }}
  ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO }}
  QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO: ${{ vars.QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO }}
  ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO }}
  QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO: ${{ vars.QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO }}
  ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO }}
  QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO: ${{ vars.QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO }}
  ROUTEKEY_ORQUESTRADOR_PAGAMENTO_CRIADO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_CRIADO }}
  QUEUES_ORQUESTRADOR_PAGAMENTO_CRIADO: ${{ vars.QUEUES_ORQUESTRADOR_PAGAMENTO_CRIADO }}
  ROUTEKEY_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO }}
  QUEUES_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO: ${{ vars.QUEUES_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO }}
  ROUTEKEY_ORQUESTRADOR_PAGAMENTO_APROVADO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_APROVADO }}
  QUEUES_ORQUESTRADOR_PAGAMENTO_APROVADO: ${{ vars.QUEUES_ORQUESTRADOR_PAGAMENTO_APROVADO }}
  ROUTEKEY_ORQUESTRADOR_PAGAMENTO_REPROVADO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_REPROVADO }}
  QUEUES_ORQUESTRADOR_PAGAMENTO_REPROVADO: ${{ vars.QUEUES_ORQUESTRADOR_PAGAMENTO_REPROVADO }}
  ROUTEKEY_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO: ${{ vars.ROUTEKEY_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO }}
  QUEUES_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO: ${{ vars.QUEUES_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO }}
  EXCHANGE_PEDIDO_RECEBIDO: ${{ vars.EXCHANGE_PEDIDO_RECEBIDO }}
  ROUTEKEY_PEDIDO_RECEBIDO: ${{ vars.ROUTEKEY_PEDIDO_RECEBIDO }}
  EXCHANGE_PEDIDO_RECEBIDO_ERRO: ${{ vars.EXCHANGE_PEDIDO_RECEBIDO_ERRO }}
  ROUTEKEY_PEDIDO_RECEBIDO_ERRO: ${{ vars.ROUTEKEY_PEDIDO_RECEBIDO_ERRO }}
  EXCHANGE_PEDIDO_REGISTRADO: ${{ vars.EXCHANGE_PEDIDO_REGISTRADO }}
  ROUTEKEY_PEDIDO_REGISTRADO: ${{ vars.ROUTEKEY_PEDIDO_REGISTRADO }}
  EXCHANGE_PEDIDO_REGISTRADO_ERRO: ${{ vars.EXCHANGE_PEDIDO_REGISTRADO_ERRO }}
  ROUTEKEY_PEDIDO_REGISTRADO_ERRO: ${{ vars.ROUTEKEY_PEDIDO_REGISTRADO_ERRO }}
  EXCHANGE_PEDIDO_ATUALIZA_SITUACAO: ${{ vars.EXCHANGE_PEDIDO_ATUALIZA_SITUACAO }}
  ROUTEKEY_PEDIDO_ATUALIZA_SITUACAO: ${{ vars.ROUTEKEY_PEDIDO_ATUALIZA_SITUACAO }}
  EXCHANGE_PAGAMENTO_CRIA: ${{ vars.EXCHANGE_PAGAMENTO_CRIA }}
  ROUTEKEY_PAGAMENTO_CRIA: ${{ vars.ROUTEKEY_PAGAMENTO_CRIA }}
  EXCHANGE_PAGAMENTO_CRIA_ERRO: ${{ vars.EXCHANGE_PAGAMENTO_CRIA_ERRO }}
  ROUTEKEY_PAGAMENTO_CRIA_ERRO: ${{ vars.ROUTEKEY_PAGAMENTO_CRIA_ERRO }}
  EXCHANGE_PAGAMENTO_ENVIA: ${{ vars.EXCHANGE_PAGAMENTO_ENVIA }}
  ROUTEKEY_PAGAMENTO_ENVIA: ${{ vars.ROUTEKEY_PAGAMENTO_ENVIA }}
  EXCHANGE_PAGAMENTO_ENVIA_ERRO: ${{ vars.EXCHANGE_PAGAMENTO_ENVIA_ERRO }}
  ROUTEKEY_PAGAMENTO_ENVIA_ERRO: ${{ vars.ROUTEKEY_PAGAMENTO_ENVIA_ERRO }}
  EXCHANGE_PRODUCAO_INICIA_PEDIDO: ${{ vars.EXCHANGE_PRODUCAO_INICIA_PEDIDO }}
  ROUTEKEY_PRODUCAO_INICIA_PEDIDO: ${{ vars.ROUTEKEY_PRODUCAO_INICIA_PEDIDO }}
  EXCHANGE_MONITOR_ATUALIZA_SITUACAO: ${{ vars.EXCHANGE_MONITOR_ATUALIZA_SITUACAO }}
  ROUTEKEY_MONITOR_ATUALIZA_SITUACAO: ${{ vars.ROUTEKEY_MONITOR_ATUALIZA_SITUACAO }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21

      - name: Set up environment variables
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV
          echo "ECS_SERVICE=${{ secrets.ECS_SERVICE }}" >> $GITHUB_ENV
          echo "ECS_CLUSTER=${{ secrets.ECS_CLUSTER }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> $GITHUB_ENV
          echo "SPRING_PROFILE=${{ secrets.SPRING_PROFILE }}" >> $GITHUB_ENV
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> $GITHUB_ENV
          echo "LOG_PATH=${{ secrets.LOG_PATH }}" >> $GITHUB_ENV
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> $GITHUB_ENV
          echo "MONGO_PASS=${{ secrets.MONGO_PASS }}" >> $GITHUB_ENV
          echo "MONGO_HOST=${{ secrets.MONGO_HOST }}" >> $GITHUB_ENV
          echo "MONGO_PORT=${{ secrets.MONGO_PORT }}" >> $GITHUB_ENV
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> $GITHUB_ENV
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}" >> $GITHUB_ENV
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> $GITHUB_ENV
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" >> $GITHUB_ENV
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> $GITHUB_ENV
          echo "EXCHANGE_ORQUESTRADOR=${{ secrets.EXCHANGE_ORQUESTRADOR }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO=${{ secrets.QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO=${{ secrets.QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO=${{ secrets.QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO=${{ secrets.QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PAGAMENTO_CRIADO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_CRIADO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PAGAMENTO_CRIADO=${{ secrets.QUEUES_ORQUESTRADOR_PAGAMENTO_CRIADO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO=${{ secrets.QUEUES_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PAGAMENTO_APROVADO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_APROVADO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PAGAMENTO_APROVADO=${{ secrets.QUEUES_ORQUESTRADOR_PAGAMENTO_APROVADO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PAGAMENTO_REPROVADO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_REPROVADO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PAGAMENTO_REPROVADO=${{ secrets.QUEUES_ORQUESTRADOR_PAGAMENTO_REPROVADO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO=${{ secrets.ROUTEKEY_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO }}" >> $GITHUB_ENV
          echo "QUEUES_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO=${{ secrets.QUEUES_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PEDIDO_RECEBIDO=${{ secrets.EXCHANGE_PEDIDO_RECEBIDO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PEDIDO_RECEBIDO=${{ secrets.ROUTEKEY_PEDIDO_RECEBIDO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PEDIDO_RECEBIDO_ERRO=${{ secrets.EXCHANGE_PEDIDO_RECEBIDO_ERRO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PEDIDO_RECEBIDO_ERRO=${{ secrets.ROUTEKEY_PEDIDO_RECEBIDO_ERRO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PEDIDO_REGISTRADO=${{ secrets.EXCHANGE_PEDIDO_REGISTRADO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PEDIDO_REGISTRADO=${{ secrets.ROUTEKEY_PEDIDO_REGISTRADO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PEDIDO_REGISTRADO_ERRO=${{ secrets.EXCHANGE_PEDIDO_REGISTRADO_ERRO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PEDIDO_REGISTRADO_ERRO=${{ secrets.ROUTEKEY_PEDIDO_REGISTRADO_ERRO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PEDIDO_ATUALIZA_SITUACAO=${{ secrets.EXCHANGE_PEDIDO_ATUALIZA_SITUACAO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PEDIDO_ATUALIZA_SITUACAO=${{ secrets.ROUTEKEY_PEDIDO_ATUALIZA_SITUACAO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PAGAMENTO_CRIA=${{ secrets.EXCHANGE_PAGAMENTO_CRIA }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PAGAMENTO_CRIA=${{ secrets.ROUTEKEY_PAGAMENTO_CRIA }}" >> $GITHUB_ENV
          echo "EXCHANGE_PAGAMENTO_CRIA_ERRO=${{ secrets.EXCHANGE_PAGAMENTO_CRIA_ERRO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PAGAMENTO_CRIA_ERRO=${{ secrets.ROUTEKEY_PAGAMENTO_CRIA_ERRO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PAGAMENTO_ENVIA=${{ secrets.EXCHANGE_PAGAMENTO_ENVIA }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PAGAMENTO_ENVIA=${{ secrets.ROUTEKEY_PAGAMENTO_ENVIA }}" >> $GITHUB_ENV
          echo "EXCHANGE_PAGAMENTO_ENVIA_ERRO=${{ secrets.EXCHANGE_PAGAMENTO_ENVIA_ERRO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PAGAMENTO_ENVIA_ERRO=${{ secrets.ROUTEKEY_PAGAMENTO_ENVIA_ERRO }}" >> $GITHUB_ENV
          echo "EXCHANGE_PRODUCAO_INICIA_PEDIDO=${{ secrets.EXCHANGE_PRODUCAO_INICIA_PEDIDO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_PRODUCAO_INICIA_PEDIDO=${{ secrets.ROUTEKEY_PRODUCAO_INICIA_PEDIDO }}" >> $GITHUB_ENV
          echo "EXCHANGE_MONITOR_ATUALIZA_SITUACAO=${{ secrets.EXCHANGE_MONITOR_ATUALIZA_SITUACAO }}" >> $GITHUB_ENV
          echo "ROUTEKEY_MONITOR_ATUALIZA_SITUACAO=${{ secrets.ROUTEKEY_MONITOR_ATUALIZA_SITUACAO }}" >> $GITHUB_ENV


      - name: Build with Maven
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          ECS_SERVICE: ${{ env.ECS_SERVICE }}
          ECS_CLUSTER: ${{ env.ECS_CLUSTER }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          LOG_LEVEL: ${{ env.LOG_LEVEL }}
          LOG_PATH: ${{ env.LOG_PATH }}
          MONGO_USER: ${{ env.MONGO_USER }}
          MONGO_PASS: ${{ env.MONGO_PASS }}
          MONGO_HOST: ${{ env.MONGO_HOST }}
          MONGO_PORT: ${{ env.MONGO_PORT }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
          RABBITMQ_HOST: ${{ env.RABBITMQ_HOST }}
          RABBITMQ_PORT: ${{ env.RABBITMQ_PORT }}
          RABBITMQ_USER: ${{ env.RABBITMQ_USER }}
          RABBITMQ_PASSWORD: ${{ env.RABBITMQ_PASSWORD }}
          EXCHANGE_ORQUESTRADOR: ${{ env.EXCHANGE_ORQUESTRADOR }}
          ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO: ${{ env.ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO }}
          QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO: ${{ env.QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO }}
          ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO: ${{ env.ROUTEKEY_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO }}
          QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO: ${{ env.QUEUES_ORQUESTRADOR_PEDIDO_RECEBIDO_ERRO }}
          ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO: ${{ env.ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO }}
          QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO: ${{ env.QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO }}
          ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO: ${{ env.ROUTEKEY_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO }}
          QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO: ${{ env.QUEUES_ORQUESTRADOR_PEDIDO_REGISTRADO_ERRO }}
          ROUTEKEY_ORQUESTRADOR_PAGAMENTO_CRIADO: ${{ env.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_CRIADO }}
          QUEUES_ORQUESTRADOR_PAGAMENTO_CRIADO: ${{ env.QUEUES_ORQUESTRADOR_PAGAMENTO_CRIADO }}
          ROUTEKEY_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO: ${{ env.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO }}
          QUEUES_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO: ${{ env.QUEUES_ORQUESTRADOR_PAGAMENTO_AGUARDANDO_PAGAMENTO }}
          ROUTEKEY_ORQUESTRADOR_PAGAMENTO_APROVADO: ${{ env.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_APROVADO }}
          QUEUES_ORQUESTRADOR_PAGAMENTO_APROVADO: ${{ env.QUEUES_ORQUESTRADOR_PAGAMENTO_APROVADO }}
          ROUTEKEY_ORQUESTRADOR_PAGAMENTO_REPROVADO: ${{ env.ROUTEKEY_ORQUESTRADOR_PAGAMENTO_REPROVADO }}
          QUEUES_ORQUESTRADOR_PAGAMENTO_REPROVADO: ${{ env.QUEUES_ORQUESTRADOR_PAGAMENTO_REPROVADO }}
          ROUTEKEY_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO: ${{ env.ROUTEKEY_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO }}
          QUEUES_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO: ${{ env.QUEUES_ORQUESTRADOR_PRODUCAO_ATUALIZA_SITUACAO }}
          EXCHANGE_PEDIDO_RECEBIDO: ${{ env.EXCHANGE_PEDIDO_RECEBIDO }}
          ROUTEKEY_PEDIDO_RECEBIDO: ${{ env.ROUTEKEY_PEDIDO_RECEBIDO }}
          EXCHANGE_PEDIDO_RECEBIDO_ERRO: ${{ env.EXCHANGE_PEDIDO_RECEBIDO_ERRO }}
          ROUTEKEY_PEDIDO_RECEBIDO_ERRO: ${{ env.ROUTEKEY_PEDIDO_RECEBIDO_ERRO }}
          EXCHANGE_PEDIDO_REGISTRADO: ${{ env.EXCHANGE_PEDIDO_REGISTRADO }}
          ROUTEKEY_PEDIDO_REGISTRADO: ${{ env.ROUTEKEY_PEDIDO_REGISTRADO }}
          EXCHANGE_PEDIDO_REGISTRADO_ERRO: ${{ env.EXCHANGE_PEDIDO_REGISTRADO_ERRO }}
          ROUTEKEY_PEDIDO_REGISTRADO_ERRO: ${{ env.ROUTEKEY_PEDIDO_REGISTRADO_ERRO }}
          EXCHANGE_PEDIDO_ATUALIZA_SITUACAO: ${{ env.EXCHANGE_PEDIDO_ATUALIZA_SITUACAO }}
          ROUTEKEY_PEDIDO_ATUALIZA_SITUACAO: ${{ env.ROUTEKEY_PEDIDO_ATUALIZA_SITUACAO }}
          EXCHANGE_PAGAMENTO_CRIA: ${{ env.EXCHANGE_PAGAMENTO_CRIA }}
          ROUTEKEY_PAGAMENTO_CRIA: ${{ env.ROUTEKEY_PAGAMENTO_CRIA }}
          EXCHANGE_PAGAMENTO_CRIA_ERRO: ${{ env.EXCHANGE_PAGAMENTO_CRIA_ERRO }}
          ROUTEKEY_PAGAMENTO_CRIA_ERRO: ${{ env.ROUTEKEY_PAGAMENTO_CRIA_ERRO }}
          EXCHANGE_PAGAMENTO_ENVIA: ${{ env.EXCHANGE_PAGAMENTO_ENVIA }}
          ROUTEKEY_PAGAMENTO_ENVIA: ${{ env.ROUTEKEY_PAGAMENTO_ENVIA }}
          EXCHANGE_PAGAMENTO_ENVIA_ERRO: ${{ env.EXCHANGE_PAGAMENTO_ENVIA_ERRO }}
          ROUTEKEY_PAGAMENTO_ENVIA_ERRO: ${{ env.ROUTEKEY_PAGAMENTO_ENVIA_ERRO }}
          EXCHANGE_PRODUCAO_INICIA_PEDIDO: ${{ env.EXCHANGE_PRODUCAO_INICIA_PEDIDO }}
          ROUTEKEY_PRODUCAO_INICIA_PEDIDO: ${{ env.ROUTEKEY_PRODUCAO_INICIA_PEDIDO }}
          EXCHANGE_MONITOR_ATUALIZA_SITUACAO: ${{ env.EXCHANGE_MONITOR_ATUALIZA_SITUACAO }}
          ROUTEKEY_MONITOR_ATUALIZA_SITUACAO: ${{ env.ROUTEKEY_MONITOR_ATUALIZA_SITUACAO }}
        run: mvn package -DskipTests

      #      - name: Test with Maven
      #        run: mvn test

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: target/*.jar

  deploy:
    name: Deploy
    environment: production
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS credentials
        run: aws sts get-caller-identity

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT